[{"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\index.js":"1","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\reportWebVitals.js":"2","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\App.js":"3","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\pages\\Movies.js":"4","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\components\\MovieList.js":"5","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\components\\MovieItem.js":"6","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\util\\hooks\\http-hook.js":"7","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\formElements\\Inputs.js":"8","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\util\\validators\\validator.js":"9","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\components\\MoviePage.js":"10","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\navigation\\MainNavigation.js":"11","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\navigation\\MainHeader.js":"12","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\formElements\\SearchBar.js":"13","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\util\\hooks\\form-hook.js":"14","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\navigation\\SideDrawer.js":"15","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\components\\backDrop.js":"16","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\components\\Backdrop.js":"17","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\navigation\\NavLinks.js":"18","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\pages\\Discover.js":"19","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\formElements\\SelectYear.js":"20","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\formElements\\ActorSearchResults.js":"21","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\pages\\MovieSearch.js":"22","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\util\\functions.js":"23","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\components\\CastMember.js":"24","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\components\\Videos.js":"25","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\pages\\SignUp.js":"26","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\pages\\Login.js":"27","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\util\\context\\auth-context.js":"28","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\components\\Modal.js":"29","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\components\\Comments.js":"30","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\components\\Replies.js":"31","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\components\\ActorPage.js":"32","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\formElements\\SearchBarResultsMovies.js":"33","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\formElements\\SearchBarResultsTv.js":"34","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\formElements\\SearchBarResultsPerson.js":"35","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\util\\context\\search-context.js":"36","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\formElements\\ImageUpload.js":"37","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\pages\\Profile.js":"38"},{"size":501,"mtime":1607390524427,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":1606856141685,"results":"41","hashOfConfig":"40"},{"size":4301,"mtime":1614417508325,"results":"42","hashOfConfig":"40"},{"size":5642,"mtime":1614416118648,"results":"43","hashOfConfig":"40"},{"size":4037,"mtime":1614415507021,"results":"44","hashOfConfig":"40"},{"size":598,"mtime":1608024583883,"results":"45","hashOfConfig":"40"},{"size":1453,"mtime":1613967994009,"results":"46","hashOfConfig":"40"},{"size":1665,"mtime":1609893460048,"results":"47","hashOfConfig":"40"},{"size":364,"mtime":1607552827951,"results":"48","hashOfConfig":"40"},{"size":7076,"mtime":1614415685885,"results":"49","hashOfConfig":"40"},{"size":6592,"mtime":1614065750636,"results":"50","hashOfConfig":"40"},{"size":248,"mtime":1607679177806,"results":"51","hashOfConfig":"40"},{"size":2851,"mtime":1614416329085,"results":"52","hashOfConfig":"40"},{"size":1534,"mtime":1613873064946,"results":"53","hashOfConfig":"40"},{"size":462,"mtime":1608090717077,"results":"54","hashOfConfig":"40"},{"size":228,"mtime":1608015364699,"results":"55","hashOfConfig":"40"},{"size":228,"mtime":1608015364699,"results":"56","hashOfConfig":"40"},{"size":887,"mtime":1614132540453,"results":"57","hashOfConfig":"40"},{"size":6874,"mtime":1614415762914,"results":"58","hashOfConfig":"40"},{"size":5670,"mtime":1608170176424,"results":"59","hashOfConfig":"40"},{"size":314,"mtime":1608353830425,"results":"60","hashOfConfig":"40"},{"size":162,"mtime":1607920870463,"results":"61","hashOfConfig":"40"},{"size":790,"mtime":1608342479193,"results":"62","hashOfConfig":"40"},{"size":599,"mtime":1611797741391,"results":"63","hashOfConfig":"40"},{"size":1034,"mtime":1612432564961,"results":"64","hashOfConfig":"40"},{"size":4378,"mtime":1614416228133,"results":"65","hashOfConfig":"40"},{"size":2305,"mtime":1614415922508,"results":"66","hashOfConfig":"40"},{"size":231,"mtime":1614070504482,"results":"67","hashOfConfig":"40"},{"size":833,"mtime":1610087744336,"results":"68","hashOfConfig":"40"},{"size":2804,"mtime":1614415453894,"results":"69","hashOfConfig":"40"},{"size":828,"mtime":1614051339264,"results":"70","hashOfConfig":"40"},{"size":4074,"mtime":1614415336919,"results":"71","hashOfConfig":"40"},{"size":2215,"mtime":1613722538295,"results":"72","hashOfConfig":"40"},{"size":1999,"mtime":1613722528244,"results":"73","hashOfConfig":"40"},{"size":1855,"mtime":1613722534072,"results":"74","hashOfConfig":"40"},{"size":272,"mtime":1613618968202,"results":"75","hashOfConfig":"40"},{"size":1677,"mtime":1613957214219,"results":"76","hashOfConfig":"40"},{"size":2862,"mtime":1614416158975,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1qn40at",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"80"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"80"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"80"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"80"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"80"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"80"},"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\index.js",[],["179","180"],"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\reportWebVitals.js",[],"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\App.js",["181","182","183","184","185","186","187"],"import logo from './logo.svg';\nimport './App.scss';\nimport {useEffect, useState, useCallback} from 'react';\nimport {BrowserRouter as Router, Switch, Redirect, Route} from 'react-router-dom';\nimport Movies from './movies/pages/Movies';\nimport MoviePage from './movies/components/MoviePage';\nimport MainNavigation from './shared/navigation/MainNavigation';\nimport Discover from './movies/pages/Discover';\nimport ActorPage from './movies/components/ActorPage'\nimport SignUp from './movies/pages/SignUp'\nimport Login from './movies/pages/Login'\nimport {AuthContext} from './util/context/auth-context';\nimport {useContext} from 'react';\nimport {searchContext} from './util/context/search-context';\nimport Profile from './movies/pages/Profile'\n\nfunction App() {\n  const [token, setToken] = useState();\n  const [userId, setUserId] = useState();\n  const [userName, setUserName] = useState();\n  const [movieReady, setMovieReady] = useState();\n  const [tvReady, setTvReady] = useState();\n  const [peopleReady, setPeopleReady] = useState();\n  const [expirationDate, setExpirationDate] = useState();\n\n  const auth = useContext(AuthContext)\n  const search = useContext(searchContext);\n  let timer;\n  const login = useCallback((userId, userName, token, expirationDate) => {\n    setToken(token);\n    console.log(userId)\n    setUserId(userId)\n    setUserName(userName)\n    const expiration  = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60)\n    setExpirationDate(expiration)\n    localStorage.setItem('userData', JSON.stringify({userId: userId, userName:userName, token: token, expirationDate: expiration.toISOString()}))\n  },[])\n  \n  const logout = () => {\n      setToken(null)\n      setUserId(null)\n      setUserName(null)\n      setExpirationDate(null)\n      localStorage.removeItem('userData')\n    }\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem('userData'))\n    if(userData && userData.token && new Date(userData.expirationDate) > new Date()){\n      login(userData.id, userData.name, userData.token, userData.expirationDate)\n    }\n  }, [login]);\n\n  useEffect(() => {\n    if (token && expirationDate) {\n      const timeRemaining = expirationDate.getTime() - new Date().getTime();\n      timer = setTimeout(() => {\n        logout()\n      }, timeRemaining)\n    }else{\n      clearTimeout(timer)\n    }\n  }, [expirationDate, token, logout])\n  \n  \n  const pingMovie = useCallback(() => {\n    setMovieReady(true)\n  })\n  const pingTv = useCallback(() => {\n    setTvReady(true);\n  })\n  const pingPeople = useCallback(() => {\n    setPeopleReady(true);\n  })\n  let routes;\n  if(token){\n      routes = (\n        <Switch>\n          <Route path=\"/\" exact>\n          <Movies />\n        </Route>\n        <Route path=\"/movie/:movie_id\" exact>\n          <MoviePage />\n        </Route>\n        <Route path=\"/discover\" exact>\n          <Discover />\n        </Route>\n        <Route path=\"/actor/:actor_id\" exact>\n          <ActorPage/>\n        </Route>\n        <Route path=\"/update/:profileId\">\n          <SignUp />\n        </Route>\n        <Route path=\"/profile\" exact>\n          <Profile />\n        </Route>\n        <Redirect to=\"/\"/>\n        </Switch>\n      )\n  }else{\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Movies />\n        </Route>\n        <Route path=\"/movie/:movie_id\" exact>\n          <MoviePage />\n        </Route>\n        <Route path=\"/discover\" exact>\n          <Discover />\n        </Route>\n        <Route path=\"/actor/:actor_id\" exact>\n          <ActorPage />\n        </Route>\n        <Route path=\"/signup\">\n          <SignUp />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Redirect to=\"/\"/>\n        </Switch>\n    )\n  }\n  return (\n    <searchContext.Provider value={{pingMovie: pingMovie, pingTv: pingTv, pingPeople: pingPeople, tvReady: tvReady, movieReady: movieReady, peopleReady: peopleReady}}>\n      <AuthContext.Provider value={{login: login, logout: logout, token: token, isLoggedIn: token, userId: userId, userName: userName}}>\n            <Router>\n            <MainNavigation />\n            <main className=\"main\">\n              {routes}\n            </main>\n            \n          </Router>\n      </AuthContext.Provider>\n    </searchContext.Provider>\n    \n    \n  );\n}\n\nexport default App;\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\pages\\Movies.js",["188","189","190","191","192","193","194","195","196","197","198","199","200","201"],"import React, {useState, useEffect, useCallback} from 'react'\r\nimport MovieList from '../components/MovieList'\r\nimport {useHttpClient} from '../../util/hooks/http-hook';\r\nimport Input from '../../shared/formElements/Inputs';\r\nimport { REQUIRE } from '../../util/validators/validator';\r\nimport './Movies.css';\r\nimport Modal from '../../shared/components/Modal';\r\n\r\nconst Movies = () => {\r\n    const {sendRequest} = useHttpClient();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [nowPlaying, setNowPlaying] = useState([]);\r\n    const [popular, setPopular] = useState([]);\r\n    const [topRated, setTopRated] = useState([]);\r\n    const [upComing, setUpComing] = useState([]);\r\n    const [nowPlayingLoading, setNowPlayingLoading] = useState(true);\r\n    const [popularLoading, setPopularLoading] = useState(true);\r\n    const [topRatedLoading, setTopRatedLoading] = useState(true);\r\n    const [upComingLoading, setUpComingLoading] = useState(true);\r\n    const [pageLoading, setIsPageLoading] = useState(true);\r\n    const [nowPlayingCount, setNowPlayingCount] = useState(1);\r\n    const [topRatedCount, setTopRatedCount] = useState(1);\r\n    const [upComingCount, setUpComingCount] = useState(1);\r\n    const [popularCount, setPopularCount] = useState(1);\r\n    useEffect(() => {\r\n        let loading = nowPlayingLoading && popularLoading && topRatedLoading && upComingLoading;\r\n        console.log(pageLoading)\r\n        setIsPageLoading(loading);\r\n    }, [])\r\n    \r\n    \r\n\r\n        \r\n    useEffect(async () => {\r\n        setNowPlayingLoading(true);\r\n        const fetchUsers = async () => {\r\n            const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/movie/home/now_playing/${nowPlayingCount}`, 'GET', null);\r\n            await setNowPlaying(oldArray => [...oldArray, ...response.results])\r\n            console.log(response.results)\r\n        }\r\n        fetchUsers();\r\n        setNowPlayingLoading(false);\r\n    }, [sendRequest])\r\n\r\n    useEffect(async () => {\r\n        setPopularLoading(true);\r\n        const fetchUsers = async () => {\r\n            const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/movie/home/popular/${popularCount}`, 'GET', null);\r\n            await setPopular(oldArray => [...oldArray, ...response.results])\r\n            console.log(response.results)\r\n        }\r\n        fetchUsers();\r\n        setPopularLoading(false);\r\n    }, [sendRequest])\r\n\r\n    useEffect(async () => {\r\n        setTopRatedLoading(true);\r\n        const fetchUsers = async () => {\r\n            const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/movie/home/top_rated/${topRatedCount}`, 'GET', null);\r\n            await setTopRated(oldArray => [...oldArray, ...response.results])\r\n            console.log(response.results)\r\n        }\r\n        fetchUsers();\r\n        setTopRatedLoading(false);\r\n    }, [sendRequest])\r\n\r\n    useEffect(async () => {\r\n        setUpComingLoading(true);\r\n        const fetchUsers = async () => {\r\n            const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/movie/home/coming_soon/${upComingCount}`, 'GET', null);\r\n            await setUpComing(oldArray => [...oldArray, ...response.results])\r\n            console.log(response.results);\r\n        }\r\n        fetchUsers();\r\n        setUpComingLoading(false);\r\n    }, [sendRequest])\r\n    \r\n    const setNowPlayingResults = useCallback((childData) => {\r\n        setNowPlaying(oldArray => [...oldArray, ...childData]);\r\n    }, [])\r\n    const setPopularResults = useCallback((childData) => {\r\n        setPopular(oldArray => [...oldArray, ...childData]);\r\n    }, [])\r\n    const setTopRatedResults = useCallback((childData) => {\r\n        setTopRated(oldArray => [...oldArray, ...childData]);\r\n    }, [])\r\n    const setComingSoonResults = useCallback((childData) => {\r\n        setUpComing(oldArray => [...oldArray, ...childData]);\r\n    }, [])\r\n    useEffect(() => {\r\n        \r\n    }, [nowPlaying])\r\n    const setNowPlayingPage = useCallback((childData) => {\r\n        setNowPlayingCount(childData);\r\n    }, [])\r\n    const setPopularPage = useCallback((childData) => {\r\n        setPopularCount(childData);\r\n    }, [])\r\n    const setTopRatedPage = useCallback((childData) => {\r\n        setTopRatedCount(childData);\r\n    }, [])\r\n    const setUpComingPage = useCallback((childData) => {\r\n        setUpComingCount(childData);\r\n    }, [])\r\n    return (\r\n        <React.Fragment>\r\n            {nowPlaying && !nowPlayingLoading &&  <div  className=\"home-row\">\r\n                <h2>NOW PLAYING</h2>\r\n                <MovieList url=\"now_playing\" id=\"nowPlaying\" movies={nowPlaying} count={setNowPlayingPage} parentCallback={setNowPlayingResults}/>\r\n            </div>}\r\n            \r\n            {popular && !popularLoading &&  <div  className=\"home-row\">\r\n                <h2>POPULAR</h2>\r\n                <MovieList url=\"popular\" id=\"popular\" movies={popular} count={setPopularPage} parentCallback={setPopularResults}/>\r\n            </div>}\r\n            \r\n            {topRated && !topRatedLoading &&  <div  className=\"home-row\">\r\n                <h2>TOP RATED</h2>\r\n                <MovieList url=\"top_rated\" id=\"topRated\" movies={topRated} count={setTopRatedPage} parentCallback={setTopRatedResults}/>\r\n            </div>}\r\n            \r\n            {upComing && !upComingLoading && <div  className=\"home-row\">\r\n                <h2>COMING SOON</h2>\r\n                <MovieList url=\"coming_soon\" id=\"comingSoon\" movies={upComing} count={setUpComingPage} parentCallback={setComingSoonResults}/>\r\n            </div>}\r\n\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Movies\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\components\\MovieList.js",["202","203"],"import React, {useRef, useCallback} from 'react'\r\nimport './MovieList.scss';\r\nimport MovieItem from './MovieItem';\r\nimport { useHttpClient } from '../../util/hooks/http-hook';\r\n\r\nconst MovieList = (props) => {\r\n    const {sendRequest} = useHttpClient();\r\n    let count = 2;\r\n    const scrollLeft = useCallback((event) => {\r\n        const current = event.target\r\n        const movieList = current.previousElementSibling;\r\n        const scrolledLeft = movieList.scrollLeft;\r\n        event.preventDefault();\r\n        const scrollOptions = {\r\n            left: scrolledLeft + 1230,\r\n            behavior: 'smooth'\r\n        }\r\n        movieList.scrollTo(scrollOptions)\r\n        \r\n        const elements = document.getElementsByClassName('movie-list');\r\n        console.log(elements)\r\n        let scrolling = false;\r\n        \r\n        var myFunction = async function() {\r\n            const left = Math.ceil(this.scrollLeft);\r\n            const width = this.scrollWidth;\r\n            const client = this.clientWidth;\r\n            console.log([left, width, client]); \r\n            if((left + client) === width){\r\n               \r\n                await props.count(count);\r\n                console.log(\"count\", count) \r\n            \r\n                console.log(props.url)\r\n                const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/movie/home/${props.url}/${count}` , 'GET', null)\r\n                console.log(response.results)\r\n                await props.parentCallback(response.results);\r\n                 count++\r\n            }\r\n            scrolling = false;\r\n\r\n            this.scroll = () => {\r\n            scrolling = true;\r\n            };\r\n\r\n            setInterval(() => {\r\n                if (scrolling) {\r\n                    scrolling = false;\r\n                    // place the scroll handling logic here\r\n                    console.log('loading')\r\n\r\n                }\r\n            }, 300);\r\n        };\r\n        for (var i = 0; i < elements.length; i++) {\r\n            elements[i].addEventListener('scroll', myFunction, false);\r\n        }\r\n    }, [])\r\n    const scrollRight = useCallback((event) => {\r\n        const current = event.target;\r\n        console.log(current)\r\n        const movieList = current.nextElementSibling;\r\n        console.log(movieList)\r\n        const width = movieList.scrollWidth\r\n        const scrolledLeft = movieList.scrollLeft;\r\n        const scrolled = width - scrolledLeft;\r\n        event.preventDefault();\r\n            \r\n        const scrollOptions = {\r\n            left: scrolledLeft - 1230,\r\n            behavior: 'smooth'\r\n        }\r\n        movieList.scrollTo(scrollOptions)\r\n        console.log(scrolled)\r\n        const elements = document.getElementsByClassName('movie-list');\r\n        console.log(elements)\r\n        const myFunction = function() {\r\n            const client = this.clientWidth;\r\n            const left = this.scrollLeft;\r\n            const width = this.scrollWidth;\r\n            console.log([left, width, client]) \r\n            \r\n        };\r\n        for (var i = 0; i < elements.length; i++) {\r\n            elements[i].addEventListener('click', myFunction, false);\r\n        }\r\n    }, [])\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <div className=\"movie-row\">\r\n            <i onClick={scrollRight}  className=\"fas fa-chevron-left forward\">right</i>\r\n                    \r\n                    <ul id={props.id}  className=\"movie-list\" >\r\n                        {props.movies.map(movie => {\r\n                            return <MovieItem \r\n                                    image={movie.poster_path}\r\n                                    title={movie.original_title}\r\n                                    id={movie.id}\r\n                                    rating={movie.voter_average}/>\r\n                        })} \r\n                    </ul>\r\n                    <i onClick={scrollLeft}  className=\"fas fa-chevron-right back\">left</i>\r\n            </div>    \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MovieList\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\components\\MovieItem.js",["204"],"import React from 'react'\r\nimport './MovieItem.scss';\r\nimport {Link} from 'react-router-dom';\r\nconst MovieItem = (props) => {\r\n    return (\r\n        <li className=\"movie-item\">\r\n            <Link to={`/movie/${props.id}`}>\r\n                <div className=\"movie-item__image\">\r\n                    <img src={`https://image.tmdb.org/t/p/original/${props.image}`} />\r\n                </div>\r\n                <div className=\"movie-item__title\">\r\n                    <h2>{props.title}</h2>\r\n                </div>\r\n            </Link>\r\n            \r\n        </li>\r\n    )\r\n}\r\n\r\nexport default MovieItem\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\util\\hooks\\http-hook.js",[],"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\formElements\\Inputs.js",["205","206","207"],"import React, {useState, useEffect, useReducer, useCallback} from 'react'\r\nimport { validate } from '../../util/validators/validator'\r\nimport './Inputs.css';\r\nconst inputReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'input-change':\r\n            return {\r\n                ...state,\r\n                value: action.value,\r\n                isValid: validate(action.value, action.validators)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nconst Inputs = (props) => {\r\n    const [inputText, dispatch] = useReducer(inputReducer, {\r\n        value: props.value || '',\r\n        isValid: props.valid || false\r\n    })\r\n    const {value, isValid} = {...inputText};\r\n    const {id, onChange} = props;\r\n    useEffect(() => {\r\n        onChange(id, value, isValid)\r\n    }, [id, value, isValid, onChange])\r\n    const inputHandler = useCallback((event) => {\r\n        dispatch({type: 'input-change', value: event.target.value, validators: props.validators})\r\n    }, [])\r\n    let  element \r\n    switch(props.element){\r\n        case 'input':\r\n            element = (<input type=\"text\" className={props.search ? 'input_search': 'input_regular'} placeholder={props.placeholder} onChange={inputHandler} value={inputText.value}/>);\r\n            break;\r\n        case 'dropDown':\r\n            element = (<select onChange={inputHandler} value={inputText.value}></select>)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                {element}\r\n            {!inputText.isValid && !props.search && <p>Please Enter Some Text</p>}\r\n            </div>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Inputs\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\util\\validators\\validator.js",[],"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\components\\MoviePage.js",["208","209","210","211","212","213","214","215","216","217","218"],"import React, {useState, useEffect, useCallback, useContext} from 'react'\r\nimport {useHttpClient} from '../../util/hooks/http-hook';\r\nimport {useParams} from 'react-router-dom'\r\nimport './MoviePage.css';\r\nimport CastMember from './CastMember';\r\nimport Videos from './Videos';\r\nimport Inputs from '../../shared/formElements/Inputs';\r\nimport {AuthContext} from '../../util/context/auth-context';\r\nimport Comments from './Comments';\r\n\r\nconst MoviePage = (props) => {\r\n    const auth = useContext(AuthContext);\r\n    const movie_id = useParams().movie_id;\r\n    \r\n    const [movieData, setMovieData] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [videoId, setVideoId] = useState();\r\n    const {sendRequest} = useHttpClient();\r\n    const [show, setShow] = useState(false);\r\n    const [comment, setComment] = useState();\r\n    const [showComments, setShowComments] = useState(false);\r\n    const [leadComments, setLeadComments] = useState()\r\n    useEffect(async () => {\r\n        setIsLoading(true);\r\n        const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/movie/home/${movie_id}`, 'GET', null);\r\n        await setMovieData(response)\r\n        console.log(response)\r\n        setIsLoading(false);\r\n    }, [sendRequest, movie_id])\r\n    useEffect(async () => {\r\n        setIsLoading(true);\r\n        const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/movieSaved/comments/${movie_id}`, 'GET', null);\r\n        await setLeadComments(response)\r\n        console.log(response)\r\n        setIsLoading(false);\r\n    }, [sendRequest])\r\n    useEffect(() => {\r\n        return () => {\r\n            console.log('useEffect')\r\n        }\r\n    }, [])\r\n    const setVideo = useCallback((childData) => {\r\n        setVideoId(childData);\r\n    }, [])\r\n    const postComment = async (event) => {\r\n        console.log('reached')\r\n        event.preventDefault();\r\n        console.log(comment, movie_id, auth.userId)\r\n        const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/movieSaved`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + auth.token\r\n            },\r\n            body: JSON.stringify({\r\n                movieId: movie_id,\r\n                comment: comment,\r\n                creator: auth.userId,\r\n                userName: auth.userName\r\n            })\r\n        })\r\n        const responseData = await response.json()\r\n        console.log(responseData)\r\n    }\r\n    const showId = (event) => {\r\n        \r\n    }\r\n    const commentsHandler = (event) => {\r\n        const comment = event.target.value\r\n        setComment(comment);\r\n    }\r\n    const showCommentsHandler = () => {\r\n        setShowComments(prevMode => !prevMode)\r\n        console.log(leadComments)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {movieData && !isLoading && \r\n            <div className=\"movie-page\">\r\n                \r\n                <div className=\"movie-page__main-image\">\r\n                    <img src={`https://image.tmdb.org/t/p/original/${movieData.backdrop_path}`}/>\r\n                    \r\n                </div>\r\n                <div><h1 className=\"movie-title\">{movieData.original_title}<span className=\"movie-release\">  ({movieData.release_date.slice(0, 4)})</span></h1></div>\r\n                \r\n                 \r\n                \r\n                <div className=\"movie-page__info-wrapper\">\r\n                    <div className=\"movie-page__info\">\r\n                        <div className=\"movie-page__info-bar\">\r\n                            <span>{movieData.runtime} min</span>\r\n                            <span>{movieData.genres[0].name}</span>\r\n                            <span><a href={`https://www.imdb.com/title/${movieData.imdb_id}/?ref_=hm_inth_1`}>IMDB</a></span>\r\n                            <span className=\"movie-page__rating\">\r\n                                <i class=\"fas fa-star rating-icon\" ></i><span>{movieData.vote_average}</span>\r\n                            </span>\r\n                        </div>\r\n                    <div/>\r\n                </div>\r\n                </div>\r\n                <div className=\"movie-profile\">\r\n                    <div className=\"movie-profile__image\">\r\n                        <img src={`https://image.tmdb.org/t/p/original/${movieData.poster_path}`}/>\r\n                    </div>\r\n                    <div className=\"movie-profile__info\">\r\n                        <p>{movieData.overview.slice(0, 250)}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"videos\">\r\n                <h2>Videos</h2>\r\n                    <div className=\"movie-page__videos\">\r\n                        \r\n                        {movieData.videos.results.map(video => {\r\n                            return (\r\n                                <Videos onClick={ async () => {\r\n                                    console.log(video.key)\r\n                                    await setVideoId(video.key)\r\n                                    console.log(movieData)\r\n                                }} movieId={video.key} title={movieData.original_title} id={video.key}/>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"comments-wrapper\" id=\"comments-wrapper\">\r\n                    <div onClick={showCommentsHandler}>\r\n                        <h2 className=\"comments-title\">\r\n                            Comments\r\n                        </h2>\r\n                    </div>\r\n                    {showComments && <div className=\"comment-handler\">\r\n                    <input placeholder=\"Add a Comment\" id=\"comment\" className=\"comments-input\" onChange={commentsHandler}/>\r\n                    \r\n                        <button onClick={postComment}>POST</button>\r\n                    </div>}\r\n                    {showComments && leadComments && <div>\r\n                        {leadComments.leadComments.map(leadComment => {\r\n                            return <Comments image={`${leadComment.creator.image}`} leadCommentId={leadComment._id} creator={leadComment.creator} name={leadComment.userName} comment={leadComment.comment}/>\r\n                        })}\r\n                    </div>}\r\n                    <hr/>\r\n                    <div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    \r\n                </div>\r\n                <div className=\"credits\">\r\n                    <h2>Credits</h2>\r\n                    {movieData.credits.cast.map(member => {\r\n                        return (\r\n                            <CastMember\r\n                            image={member.profile_path}\r\n                            name={member.name} \r\n                            id={member.id}/>\r\n                        )\r\n                    })}\r\n                </div>   \r\n            </div>}\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default MoviePage\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\navigation\\MainNavigation.js",["219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244"],"import React, {useState, useCallback} from 'react'\r\nimport './MainNavigation.css'\r\nimport MainHeader from './MainHeader';\r\nimport SearchBar from '../formElements/SearchBar';\r\nimport SearchBarResultsMovies from '../formElements/SearchBarResultsMovies';\r\nimport SearchBarResultsTv from '../formElements/SearchBarResultsTv';\r\nimport SearchBarResultsPerson from '../formElements/SearchBarResultsPerson';\r\n\r\nimport SideDrawer from './SideDrawer'\r\nimport {Link} from 'react-router-dom'\r\nimport Backdrop from '../components/Backdrop'\r\nimport NavLinks from '../navigation/NavLinks'\r\nimport {AuthContext} from '../../util/context/auth-context';\r\nimport {useContext} from 'react';\r\nimport { css } from \"@emotion/core\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {searchContext} from '../../util/context/search-context';\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\nconst MainNavigation = (props) => {\r\n    const auth = useContext(AuthContext);\r\n    const [showSearch, setShowSearch] = useState(false);\r\n    const [results, setResults] = useState([])\r\n    const [showResults, setShowResults] = useState(false)\r\n    const [loadingResults, setLoadingResults] = useState();\r\n    const [showDrawer, setShowDrawer] = useState();\r\n    const [moviePresent, setMoviePresent] = useState(false);\r\n    const [tvPresent, setTvPresent] = useState(false);\r\n    const [personPresent, setPersonPresent] = useState(false);\r\n    const [present, setPresent] = useState({\r\n        movie: null,\r\n        tv: null,\r\n        person: null\r\n    })\r\n    const movie = [];\r\n    const tv = [];\r\n    const person = [];\r\n    const [movies, setMovies ] = useState()\r\n    let [loading, setLoading] = useState(false);\r\n    let [color, setColor] = useState(\"#ffffff\");\r\n    const [tvReady, setTvReady] = useState(false);\r\n    const [movieReady, setMovieReady] = useState(false);\r\n    const [personReady, setPersonReady] = useState(false);\r\n    const search = useContext(searchContext);\r\n    const [ready, setReady] = useState();\r\n    const openSearch = () => {\r\n        setShowSearch(true)\r\n        \r\n    }\r\n    const closeSearch = () => {\r\n        setShowSearch(false)\r\n        setShowResults(false)\r\n    }\r\n    const callbackFunction = (childData) => {\r\n        setResults(childData)\r\n    }\r\n    const openResults = (data) => {\r\n        setShowResults(data);\r\n    }\r\n    const closeResults = () => {\r\n        setShowResults(false)\r\n    }\r\n    const closeDrawer = () => {\r\n        setShowDrawer(false)\r\n    }\r\n    const openDrawer = () => {\r\n        setShowDrawer(true)\r\n    }\r\n    const printUser = (event) => {\r\n        event.preventDefault();\r\n        console.log(auth.userId)\r\n    }\r\n    const clicked = (data) => {\r\n        setShowSearch(false)\r\n        console.log(data)\r\n    }\r\n    const presentHandler = (childata) => {\r\n        setPresent(childata);\r\n        console.log(present)  \r\n    }\r\n    const setMovieCallback = useCallback((data) => {\r\n        setMoviePresent(data)\r\n    }, [])\r\n    const loadSpinner = (data) => {\r\n       \r\n    }\r\n    const imageLoaded = (data) => {\r\n        setLoading(false)\r\n    }\r\n    const tvImages = (data) => {\r\n        setTvReady(data)\r\n    }\r\n    const personImages = (data) => {\r\n        setPersonReady(data)\r\n    }\r\n    const movieImages = (data) => {\r\n        setMovieReady(true)\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {showDrawer && <Backdrop onClick={closeDrawer}/>}\r\n            {<SideDrawer  onClick={closeDrawer} show={showDrawer}>\r\n                <NavLinks className=\"side-drawer__nav\"/>\r\n            </SideDrawer>}\r\n            <MainHeader className=\"main-header-nav\">\r\n                {!showSearch && <div className=\"nav-left\">\r\n                    <button onClick={openDrawer} className=\"main-header-nav__button\">\r\n                        <span />\r\n                        <span />\r\n                        <span />\r\n                    </button>\r\n                    <h1 className=\"main-header-nav__title\"><Link to=\"/\">CINEMA_DL</Link></h1>\r\n                </div>}\r\n                {!showSearch && !auth.isLoggedIn &&<div onClick={openSearch} className=\"nav-right\">\r\n                    <span style={{fontSize: '2rem', marginRight: '3rem'}}>\r\n                        <i className=\"fas fa-search\"></i>\r\n                    </span>\r\n                    <h2>Sign in</h2>\r\n                </div>}\r\n                {auth.isLoggedIn && <button onClick={auth.logout}>LOGOUT</button>}\r\n                {showSearch && <SearchBar loading={loadSpinner}  results onClick={closeSearch} present={presentHandler} showResults={openResults} parentCallback={callbackFunction}/>}\r\n            </MainHeader>\r\n            \r\n           \r\n           \r\n               <React.Fragment>\r\n                  {showResults && <div onClick={closeResults} className=\"resultsHolder\">\r\n                \r\n                {results.filter(result => {\r\n                    return result.media_type === 'movie';\r\n                }).slice(0, 5).map(result => {\r\n                    if(result.media_type === 'movie'){\r\n                       movie.push(result)\r\n                       console.log(movie)\r\n                    }    \r\n                })}\r\n                \r\n                {movie.length > 0 && <SearchBarResultsMovies moviePresent movieReady moviesImages={movieImages} clicked={clicked} present={movie.length > 0} results={movie}/>}\r\n              \r\n                {results.filter(result => {\r\n                    return result.media_type === 'tv';\r\n                }).slice(0, 5).map(result => {\r\n                    if(result.media_type === 'tv'){\r\n                       tv.push(result)\r\n                       console.log(tv)\r\n                    }    \r\n                })}\r\n                {tv.length > 0 && <SearchBarResultsTv tvImages={tvImages} present={tv.length > 0} results={tv}/>}\r\n              \r\n                {results.filter(result => {\r\n                    return result.media_type === 'person';\r\n                }).slice(0, 5).map(result => {\r\n                    if(result.media_type === 'person' && result.profile_path){\r\n                       person.push(result)\r\n                       console.log(person)\r\n                    }    \r\n                })}\r\n                {movie.length > 0 && <SearchBarResultsPerson peopleImages={personImages} imageLoaded={imageLoaded} present={person.length > 0} results={person}/>}\r\n              \r\n                \r\n            </div>} \r\n               </React.Fragment>\r\n               \r\n           \r\n          \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MainNavigation\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\navigation\\MainHeader.js",[],"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\formElements\\SearchBar.js",["245","246","247","248","249","250","251","252","253","254"],"import React, {useEffect, useState, useContext} from 'react'\r\nimport './SearchBar.css'\r\nimport Input from '../formElements/Inputs'\r\nimport { REQUIRE } from '../../util/validators/validator'\r\nimport { useForm } from '../../util/hooks/form-hook'\r\nimport { sendRequest } from '../../util/hooks/http-hook'\r\nimport axios from 'axios'\r\nimport {searchContext} from '../../util/context/search-context';\r\n\r\nconst SearchBar = (props) => {\r\n    const [searchResults, setSearchResults] = useState();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const search = useContext(searchContext);\r\n    const [present, setPresent] = useState({\r\n        movie: false,\r\n        tv: false,\r\n        person: false\r\n    });\r\n    const inputHandler = async (event) => {\r\n        \r\n        // need to find a way to load the component after the images have entered the DOM\r\n        console.log(event.target.value)\r\n        let query = event.target.value;\r\n        if(!query || query.trim().lenth === 0){\r\n            console.log('reached')\r\n            /*setPresent({\r\n                movie: false,\r\n                tv: false,\r\n                person: false\r\n            })*/\r\n            await props.parentCallback([])\r\n            await props.present(present);\r\n        }else{\r\n            \r\n            props.loading(true)\r\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/search/database/${query}`, {\r\n            method: 'GET',\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: null\r\n        })\r\n        const responseData = await response.json()\r\n        console.log(responseData.results)\r\n        responseData.results.map(result => {\r\n            if(result.media_type === 'tv'){\r\n                setPresent({...present, tv: 'TV'})\r\n            }\r\n            if(result.media_type === 'movie'){\r\n                setPresent({...present, movie: 'MOVIE'})\r\n            }\r\n            if(result.media_type === 'person'){\r\n                setPresent({...present, person: 'PERSON'})\r\n            }\r\n        })\r\n        await props.parentCallback(responseData.results);\r\n        await props.showResults(true)\r\n        await props.present(present);\r\n        setIsLoading(false)\r\n        setTimeout(() => {\r\n            props.loading(false)\r\n        })\r\n        \r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"searchBar\">\r\n                <input className=\"input_search\" id=\"search\" search element=\"input\" validators={[REQUIRE()]} placeholder=\"Search\" onChange={inputHandler}/>\r\n                <span onClick={props.onClick} className=\"showSearch\" style={{fontSize: '3rem', marginRight: '1rem', paddingLeft: '1rem'}}><i class=\"fas fa-times\"></i></span>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\util\\hooks\\form-hook.js",["255","256","257"],"import {useState, useCallback, useReducer, useEffect} from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    console.log('reached')\r\n    let formIsValid = true\r\n    switch(action.type){\r\n        case 'change':\r\n        for(const inputId in state.Inputs){\r\n            if(!state.Inputs[inputId]){\r\n                continue;\r\n            }\r\n            if(inputId === action.id){\r\n                formIsValid = formIsValid && action.isValid\r\n            }else{\r\n                formIsValid = formIsValid && state.Inputs[inputId].isValid\r\n            }\r\n        }\r\n        return {\r\n            ...state,\r\n            Inputs: {\r\n                ...state.Inputs,\r\n                [action.id]: {value: action.value, isValid: action.isValid}\r\n            },\r\n            isValid: formIsValid\r\n        }\r\n        case 'set-data':\r\n            return {\r\n                Inputs: action.Inputs,\r\n                isValid: action.isValid\r\n            }\r\n    }\r\n}\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formText, dispatch] = useReducer(formReducer, {\r\n        Inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    })\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({type: 'change', id: id, value: value, isValid: isValid})\r\n    }, [])\r\n    const setFormData = useCallback((inputValues, formValidity) => {\r\n        dispatch({type: 'set-data', Inputs: inputValues, isValid: formValidity})\r\n    }, [])\r\n\r\n    return [formText, inputHandler, setFormData];\r\n}","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\navigation\\SideDrawer.js",[],"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\components\\backDrop.js",[],"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\components\\Backdrop.js",[],"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\navigation\\NavLinks.js",[],"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\pages\\Discover.js",["258","259","260","261","262","263","264","265"],"import React, {useState, useEffect} from 'react'\r\nimport Input from '../../shared/formElements/Inputs';\r\nimport { useForm } from '../../util/hooks/form-hook';\r\nimport { useHttpClient } from '../../util/hooks/http-hook';\r\nimport { REQUIRE } from '../../util/validators/validator';\r\nimport SelectYear from '../../shared/formElements/SelectYear';\r\nimport ActorSearchResults from '../../shared/formElements/ActorSearchResults';\r\nimport './Discover.scss';\r\nimport MovieList from '../../movies/components/MovieList';\r\nimport { addEvent } from '../../util/functions';\r\nconst Discover = (props) => {\r\n    const {sendRequest} = useHttpClient();\r\n    const [genres, setGenres] = useState();\r\n    const [genresLoading, setGenresLoading] = useState();\r\n    const [actors, setActors] = useState();\r\n    const [actorsLoading, setActorsLoading] = useState(true);\r\n    const [discovered, setDiscovered] = useState([1,2]);\r\n    const [discoveredLoading, setDiscoveredLoading] = useState(true);\r\n    const [actorId, setActorId] = useState();\r\n    useEffect(async () => {\r\n        setGenresLoading(true);\r\n        const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/discover/genres`, 'GET', null);\r\n        await setGenres(response.genres)\r\n        console.log(response.genres)\r\n        setGenresLoading(false);\r\n        document.getElementById('name').focus();\r\n        document.getElementById('name').select();\r\n        \r\n    }, [sendRequest])\r\n    const removeActors = async () => {\r\n        const element = await document.getElementById('actor-search')\r\n        console.log(element)\r\n        if(element.style.display == \"block\"){\r\n            console.log('none')\r\n            element.style.display = \"none\"\r\n        }else{\r\n            element.style.display = 'block' \r\n            console.log('block')\r\n        }\r\n        \r\n    } \r\n    const showActors = () => {\r\n        document.getElementById('actor-search').style.display = \"block\"\r\n    }\r\n    const hideActors = () => {\r\n        document.getElementById('actor-search').style.display = \"none\"\r\n    }\r\n    const showOrHide = () => {\r\n        if(document.getElementById('actor-search').style.display == \"block\"){\r\n            hideActors()\r\n        }else {\r\n            showActors();\r\n        }\r\n    }\r\n    useEffect(() => {\r\n       \r\n        const actorInput = document.getElementById('name');\r\n        actorInput.addEventListener('blur', () => { \r\n            console.log('blur')\r\n            hideActors();\r\n        console.log('reached')\r\n        });\r\n        actorInput.addEventListener('focus', () => {\r\n            console.log('focus')\r\n            showActors();\r\n        })\r\n        /*addEvent(document.getElementById('name'),'blur',function(e){\r\n            const input = e.target || e.srcElement;\r\n            const element = document.getElementById('actor-search');\r\n            console.log(element)\r\n            const display = getComputedStyle(element).display;\r\n            \r\n                element.style.display = \"none\";\r\n                console.log(display)\r\n           \r\n        });\r\n        addEvent(document.getElementById('name'),'focus',function(e){\r\n            const input = e.target || e.srcElement;\r\n            const element = document.getElementById('actor-search');\r\n            console.log(element)\r\n            const display = getComputedStyle(element).display;\r\n           \r\n                element.style.display = \"block\";\r\n                console.log(display)\r\n           \r\n        });*/\r\n      \r\n    }, [])\r\n    \r\n    \r\n    const discover = async (event) => {\r\n        console.log(actorId)\r\n        event.preventDefault();\r\n        setDiscoveredLoading(true);\r\n        let genre = document.getElementById(\"genre\");\r\n        genre = genre.value || null;\r\n        let year = document.getElementById(\"year\");\r\n        year = year.value || null;\r\n        let name = document.getElementById(\"name\");\r\n        name = actorId || null;\r\n        console.log(genre, year, name)\r\n        \r\n        const response = await fetch(`http://localhost:3000/discover/${name}/${year}/${genre}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const responseData = await response.json();\r\n        \r\n        setDiscovered(responseData.results);\r\n        console.log(responseData.results);\r\n        setDiscoveredLoading(false);\r\n    }\r\n    const findName = async (event) => {\r\n        setActorsLoading(true);\r\n        const name = event.target.value;\r\n        const response = await fetch(`http://localhost:3000/search/actor/${name}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const responseData = await response.json();\r\n        console.log(responseData.results)\r\n        setActors(responseData.results)\r\n        console.log(name)\r\n        setActorsLoading(false)\r\n    }\r\n    const alertName = (event) => {\r\n        console.log('reachted')\r\n        console.log(event.currentTarget.id);\r\n        setActorId(event.currentTarget.id);\r\n        console.log(actorId)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n                <form className=\"form\">\r\n                    {genres && !genresLoading && <div class=\"custom-select form-element-div\">\r\n                        <select  element=\"dropDown\" id=\"genre\" validators={[REQUIRE()]}>\r\n                            {genres.map(genre => {\r\n                                return (\r\n                                <option value={genre.id} >{genre.name}</option>\r\n                                )\r\n                            })}\r\n                        </select>\r\n                    </div>}\r\n                    <div className=\"form-element-div\">\r\n                        <SelectYear  id=\"year\"/>\r\n                    </div>\r\n                        \r\n                    <div className=\"name-input form-element-div\">\r\n                        <input placeholder=\"Search Actor\" type=\"text\" onChange={findName} id=\"name\"/>\r\n                        {<div className=\"actor-search\" id=\"actor-search\">\r\n                        {!actorsLoading && actors.map(actor => {\r\n                            return ( <ActorSearchResults onClick={alertName} name={actor.name} actor_id={actor.id}/>)\r\n                        })}\r\n                        </div>}\r\n                        \r\n                    </div>\r\n                    <div className=\"form-element-div\">\r\n                        <button onClick={discover}>DISCOVER</button>\r\n                    </div>\r\n                    \r\n                </form>\r\n               {discovered && !discoveredLoading && <div className=\"home-row\">\r\n                <h2>RESULTS</h2>\r\n                <MovieList movies={discovered}/>\r\n            </div>}\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Discover\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\formElements\\SelectYear.js",[],"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\formElements\\ActorSearchResults.js",[],"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\pages\\MovieSearch.js",[],["266","267"],"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\util\\functions.js",[],"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\components\\CastMember.js",["268"],"import React from 'react'\r\nimport './CastMember.css'\r\nimport {Link} from 'react-router-dom';\r\nconst CastMember = (props) => {\r\n    return (\r\n        <Link to={`/actor/${props.id}`}>\r\n            <div className=\"cast-member\">\r\n                <div className=\"cast-member__image\">\r\n                    <img src={`https://image.tmdb.org/t/p/original/${props.image}`}/>\r\n                </div>\r\n                <div >\r\n                    <h3 className=\"cast-member__name\" >{props.name}</h3>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n        \r\n    )\r\n}\r\n\r\nexport default CastMember\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\components\\Videos.js",["269","270"],"import React, {useState} from 'react'\r\nimport './Videos.css'\r\nimport Modal from '../../shared/components/Modal';\r\nconst Videos = (props) => {\r\n    const [show, setShow] = useState(false)\r\n    const playVideo = () => {\r\n        setShow(true)\r\n    }\r\n    const closeVideo = (event) => {\r\n        event.preventDefault();\r\n        setShow(false) \r\n        console.log('reached')\r\n        console.log(show)\r\n    }\r\n    return (\r\n        <div id={props.movieId}>\r\n            {!show && <img onClick={playVideo} src={`https://img.youtube.com/vi/${props.id}/default.jpg`} />}\r\n            <Modal show={show} header={props.title} modalClass=\"modalClass\" footerClass=\"footerClass\" headerClass=\"headerClass\" contentClass=\"contentClass\" footer={<button onClick={closeVideo}>CLOSE</button>}>\r\n                    <iframe width=\"420\" height=\"345\" src={`https://www.youtube.com/embed/${props.id}?autoplay`} frameborder=\"0\" allowFullScreen>\r\n                    </iframe>\r\n                </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Videos\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\pages\\SignUp.js",["271","272","273"],"import React from 'react'\r\nimport Input from '../../shared/formElements/Inputs';\r\nimport { useForm } from '../../util/hooks/form-hook';\r\nimport { REQUIRE } from '../../util/validators/validator';\r\nimport './SignUp.scss';\r\nimport {useContext, useCallback} from 'react';\r\nimport {AuthContext} from '../../util/context/auth-context';\r\nimport ImageUpload from '../../shared/formElements/ImageUpload'\r\nimport {useHttpClient} from '../../util/hooks/http-hook'\r\nimport {useParams} from 'react-router-dom';\r\n\r\nconst SignUp = (props) => {\r\n    const {sendRequest} = useHttpClient();\r\n    const profileId = useParams().profileId;\r\n    const auth = useContext(AuthContext);\r\n    const http = useCallback(async (url, method = 'GET', body = null, headers = {'Authorization': 'Bearer ' + auth.token}) => {\r\n        const response = await fetch(url, {\r\n            method,\r\n            body,\r\n            headers\r\n        })\r\n        const responseData = await response.json()\r\n        console.log(responseData)\r\n        return responseData;\r\n    }, [])\r\n    const [formText, inputHandler, setFormData] = useForm({\r\n        email: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        password: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        name: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        image: {\r\n            value: null,\r\n            isValid: false\r\n        }\r\n        \r\n    })\r\n    const signUp = async (event) => {\r\n        event.preventDefault();\r\n        console.log(formText.Inputs.name.value);\r\n        let formData = new FormData();\r\n        if(!profileId){\r\n\r\n        }\r\n        formData.append('name', formText.Inputs.name.value);\r\n        formData.append('email', formText.Inputs.email.value);\r\n        formData.append('password', formText.Inputs.password.value);\r\n        formData.append('image', formText.Inputs.image.value)\r\n        if(!profileId){\r\n                try{\r\n                \r\n                console.log(formData)\r\n            \r\n                for (var key of formData.entries()) {\r\n                    console.log(key[0] + ', ' + key[1]);\r\n                }\r\n                \r\n                /*const responseData = await sendRequest(\r\n                    'http://localhost:3000/signup',\r\n                    'POST',\r\n                    formData\r\n                );*/\r\n                /*const response = await useCallback(fetch('http://localhost:3000/signup',{\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(formData)\r\n                }), []) \r\n                const responseData = await response.json()*/\r\n                const responseData = await http(`${process.env.REACT_APP_BACKEND_URL}/signup`, 'POST', formData)\r\n                if(responseData.auth){\r\n                    auth.login();\r\n                }\r\n                \r\n            }catch{\r\n                console.log('Invalid entry')\r\n            } \r\n        }else{\r\n            console.log('reached')\r\n            const responseData = await http(`${process.env.REACT_APP_BACKEND_URL}/update/${profileId}`, 'PATCH', formData)\r\n            console.log(responseData)\r\n        }\r\n          \r\n    }\r\n    return (\r\n        <form class=\"form\">\r\n            <label>Name</label>\r\n            <div className=\"form-element-div\">\r\n                <Input type=\"text\" id=\"name\" element=\"input\" onChange={inputHandler} validators={[REQUIRE()]}/>\r\n            </div>\r\n            <label>Email</label>\r\n            <div className=\"form-element-div\"> \r\n                <Input type=\"text\" id=\"email\" element=\"input\" onChange={inputHandler} validators={[REQUIRE()]}/>\r\n            </div>\r\n            <label>Password</label>\r\n            <div className=\"form-element-div\">\r\n                <Input type=\"text\" id=\"password\" element=\"input\" onChange={inputHandler} validators={[REQUIRE()]}/>\r\n            </div>\r\n            <div className=\"form-element-div\">\r\n                <ImageUpload  id=\"image\" onInput={inputHandler} />\r\n            </div>\r\n            \r\n            <div className=\"form-element-div\">\r\n                <button onClick={signUp} disabled={!formText.isValid}>SIGN UP</button>\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\pages\\Login.js",["274"],"import React from 'react'\r\nimport './Login';\r\nimport Inputs from '../../shared/formElements/Inputs';\r\nimport { REQUIRE } from '../../util/validators/validator';\r\nimport { useForm } from '../../util/hooks/form-hook';\r\nimport {AuthContext} from '../../util/context/auth-context';\r\nimport {useContext} from 'react';\r\nimport ImageUpload from '../../shared/formElements/ImageUpload';\r\n\r\nconst Login = () => {\r\n    const auth = useContext(AuthContext)\r\n    const [formText, inputHandler] = useForm({\r\n        email: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        password: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false)\r\n    const login = async (event) => {\r\n        event.preventDefault();\r\n        const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: formText.Inputs.email.value,\r\n                password: formText.Inputs.password.value\r\n            })\r\n        })\r\n        const responseData = await response.json();\r\n        console.log(responseData);\r\n        console.log(responseData)\r\n        if(responseData.auth){\r\n            await auth.login(responseData.profile._id, responseData.profile.name, responseData.token);\r\n        }\r\n        \r\n    }\r\n    const printUser = (event) => {\r\n        event.preventDefault();\r\n        console.log(auth.userId)\r\n    }\r\n    return (\r\n        <form className=\"form\">\r\n            \r\n            <div className=\"form-element-div\">\r\n                <label>Email</label>\r\n                <Inputs element=\"input\" id=\"email\" onChange={inputHandler} validators={[REQUIRE()]} />\r\n            </div>\r\n            <div className=\"form-element-div\">\r\n                <label>Password</label>\r\n                <Inputs element=\"input\" id=\"password\" onChange={inputHandler} validators={[REQUIRE()]} />\r\n            </div>\r\n            \r\n            <div className=\"form-element-div\">\r\n                <button onClick={login} disabled={!formText.isValid}>Login</button>\r\n                <button onClick={printUser}>USER</button>\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\util\\context\\auth-context.js",[],"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\components\\Modal.js",[],"C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\components\\Comments.js",["275","276","277","278","279"],"import React, {useState, useContext, useEffect} from 'react'\r\nimport './Comments.scss';\r\nimport Replies from './Replies'\r\nimport {AuthContext} from '../../util/context/auth-context';\r\nimport {useHttpClient} from '../../util/hooks/http-hook';\r\n\r\nconst Comments = (props) => {\r\n    const auth = useContext(AuthContext)\r\n    const {sendRequest} = useHttpClient()\r\n    const [showInput, setShowInput] = useState(false);\r\n    const [reply, setReply] = useState()\r\n    const [replies, setReplies] = useState(null);\r\n    const [repliesLoaded, setRepliesLoaded] = useState(false)\r\n    const showInputHandler = (event) => {\r\n        event.preventDefault();\r\n        setShowInput(prevMode => !prevMode)\r\n    }\r\n    \r\n    useEffect(async () => {\r\n        const fetchUsers = async () => {\r\n            const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/movieSaved/replies/${props.leadCommentId}`, 'GET', null);\r\n            console.log(response)\r\n            await setReplies(response)\r\n        }\r\n        await fetchUsers();\r\n        setRepliesLoaded(true)\r\n    }, [sendRequest])\r\n\r\n    const postReply = async (event) => {\r\n        event.preventDefault()\r\n        const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/movieSaved/replies`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                leadCommentId: props.leadCommentId,\r\n                replyTo: props.creator,\r\n                comment: '@' + props.name + '  ' +  reply,\r\n                creator: auth.userId\r\n            })\r\n        })\r\n        const responseData = await response.json();\r\n        console.log(responseData)\r\n    }\r\n    const replyHandler = (event) => {\r\n        const reply = event.target.value;\r\n        setReply(reply)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"profile-description\">\r\n                <div className=\"profile-image\">\r\n                    <img src={props.image}/>\r\n                </div>\r\n                <div>\r\n                    <p>{props.name}</p>\r\n                    <p>{props.comment}</p>\r\n                    <a>Like </a> . <a onClick={showInputHandler}>Reply</a> . <span>9m</span>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            \r\n            \r\n            \r\n            {showInput && <div><input onChange={replyHandler}/><br/> <button onClick={postReply}>Reply</button></div>}\r\n            {repliesLoaded && <div className=\"replies\">\r\n                    {replies.map(reply => {\r\n                        return <Replies image={reply.creator.image} reply={reply.comment} name={reply.creator.name}/>\r\n                    })}\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\components\\Replies.js",["280","281"],"import React from 'react'\r\nimport './Replies.css'\r\n\r\nconst Replies = (props) => {\r\n    const showInputHandler = () => {\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"reply\">\r\n                <div className=\"reply__image\">\r\n                    <img src={props.image ? props.image: 'https://www.stylist.co.uk/images/app/uploads/2016/07/25063058/alicia-keys-1-256x256.jpg?w=256&h=256&fit=max&auto=format%2Ccompress'} alt=\"Alicia Keys\"/>\r\n                </div>\r\n                <div className=\"reply__info\">\r\n                    <p>{props.name}</p>\r\n                    <p>{props.reply}</p>\r\n                    <a>Like </a> . <a onClick={showInputHandler}>Reply</a> . <span>9m</span>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Replies\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\components\\ActorPage.js",["282","283","284","285","286","287","288","289","290","291","292"],"import React, {useCallback, useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport './ActorPage.css';\r\n\r\nconst fetchData =  async (actorId) => {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/actorPage/${actorId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    const responseData = await response.json();\r\n    console.log(responseData);\r\n    return responseData;\r\n}\r\n\r\nconst ActorPage = (props) => {\r\n    const [actorInfo, setActorInfo] = useState(null);\r\n    const actorId = useParams().actor_id;\r\n    const [actorPhotos, setActorPhotos] = useState([]);\r\n    const [actorProfile, setActorProfile] = useState()\r\n    const [birthday, setBirthday] = useState();\r\n    const photos = []\r\n    \r\n    useEffect( async () => {\r\n        const responseData = await fetchData(actorId);\r\n        setActorInfo(responseData)\r\n        const dateSplit = responseData.birthday.split('-');\r\n        \r\n        const day = new Date(dateSplit[0], dateSplit[1], dateSplit[2]).toString().split(' ')\r\n        setBirthday(`${day[1]} ${day[2]} ${day[3]}`);\r\n        if(responseData.images.profiles.length > 0){\r\n            setActorProfile(responseData.images.profiles[0].file_path)\r\n        }\r\n        \r\n    }, [])\r\n\r\n    const changePhotoleft = () => {\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            {actorInfo && <React.Fragment>\r\n                <div className=\"actor-page\">\r\n                    <h2 className=\"actor-page__name\">{actorInfo.name}</h2>\r\n                    <h3 className=\"actor-page__department\">{actorInfo.known_for_department}</h3>\r\n\r\n                    <div className=\"actor-page__image\">\r\n                        {actorInfo.tagged_images.results.map(images => {\r\n                            photos.push(images.media.backdrop_path)\r\n                        }), console.log(photos)}\r\n                    \r\n                        <div className=\"actor-carousel\">\r\n                            \r\n                                {photos[0] && <img src={`https://image.tmdb.org/t/p/original/${photos[0] }`}/>}\r\n                           \r\n                            \r\n                        </div>\r\n                        <div className=\"actor-profile\">\r\n                            <div className=\"actor-profile__image\">\r\n                                <img src={`https://image.tmdb.org/t/p/original/${actorProfile}`}/>\r\n                            </div>\r\n                            <div className=\"profile-info\">\r\n                                <p>{actorInfo.biography.slice(0, 120)}....</p>\r\n                                <p><span>Born:  </span> {birthday}</p>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                   <div className=\"actor-photos\">\r\n                        <h2>Photos</h2>\r\n                        <div className=\"profile-pic__carousel\">\r\n                            {actorInfo.images.profiles.slice(1).map(images => {\r\n                                return <div className=\"profile-pic\">\r\n                                            <img  src={`https://image.tmdb.org/t/p/original/${images.file_path}`}/>\r\n                                    </div>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"actor-social\">\r\n                        <h2>Media</h2>\r\n                        <span>\r\n                            <i class=\"fab icon fa-twitter\"></i> \r\n                        </span>\r\n                        <span>\r\n                            <i class=\"fab icon fa-facebook-square\"></i>\r\n                        </span>\r\n                        <span>\r\n                            <i class=\"fab icon fa-instagram\"></i>\r\n                        </span>\r\n                        <span></span>\r\n                    </div>\r\n                </div> \r\n                \r\n            </React.Fragment>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActorPage\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\formElements\\SearchBarResultsMovies.js",["293","294","295","296","297","298","299"],"import React, { useState, useContext } from 'react'\r\nimport './SearchBarResults.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { css } from \"@emotion/core\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { searchContext } from '../../util/context/search-context';\r\n\r\nconst SearchBarResultsMovies = (props) => {\r\n    const [moviePresent, setMoviePresent] = useState(false)\r\n    const [imagesReady, setImagesReady] = useState(false)\r\n    const search = useContext(searchContext);\r\n\r\n    if (props.results.length > 0) {\r\n\r\n    }\r\n    const clicked = () => {\r\n        props.clicked(true)\r\n    }\r\n    const imagesLoaded = []\r\n    const ready = false;\r\n    let show = false;\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className=\"ready\" >\r\n                {props.present && moviePresent && <h2 className=\"category\">MOVIE</h2>}\r\n                {props.results.map(result => {\r\n                    return (\r\n                        <Link className=\"searchBarResults\" to={`/movie/${result.id}`} exact=\"true\">\r\n                            <div onClick={clicked} className=\"searchBarLink\">\r\n                                <div className=\"searchBarLink__image\">\r\n                                    <img onLoad={() => {\r\n                                        imagesLoaded.push(true)\r\n                                        if (imagesLoaded.length === props.results.length) {\r\n                                            search.pingMovie()\r\n                                            show = true\r\n                                            console.log(search.movieReady)\r\n                                            setMoviePresent(true)\r\n\r\n                                        }\r\n\r\n                                    }} src={`https://image.tmdb.org/t/p/original/${result.poster_path}`} />\r\n                                </div>\r\n                                <h2>\r\n                                    {result.title}\r\n                                </h2>\r\n                            </div>\r\n\r\n                        </Link>\r\n                    )\r\n\r\n                })}\r\n            </div>\r\n        </React.Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SearchBarResultsMovies\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\formElements\\SearchBarResultsTv.js",["300","301","302","303","304","305","306","307"],"import React, {useState, useContext} from 'react'\r\nimport './SearchBarResults.css';\r\nimport {Link} from 'react-router-dom';\r\nimport { css } from \"@emotion/core\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {searchContext} from '../../util/context/search-context';\r\n\r\nconst SearchBarResultsTv = (props) => {\r\n    const [tvPresent, setTvPresent] = useState(false)\r\n\r\n    let [loading, setLoading] = useState(true);\r\n    let [color, setColor] = useState(\"#ffffff\");\r\n    const search = useContext(searchContext);\r\n    let show = false;\r\n    if(props.results.length > 0){\r\n        \r\n    }\r\n    const linkClicked = () => {\r\n        props.clicked(true)\r\n    }\r\n    const imagesLoaded = []\r\n    return (\r\n        <div className=\"ready\" >\r\n            {props.present && tvPresent && <h2 className=\"category\">TV</h2>}\r\n           \r\n                {props.results.map(result => {\r\n                return (\r\n                    <Link onclick={linkClicked}  className=\"searchBarResults\" to={`/movie/${result.id}`} exact=\"true\">\r\n                <div className=\"searchBarLink\">\r\n                        <div className=\"searchBarLink__image\">\r\n                            <img onLoad={() => { imagesLoaded.push(true) \r\n                                if(imagesLoaded.length === props.results.length){\r\n                                    search.pingTv();\r\n                                    show = true\r\n                                    setTvPresent(true)\r\n                                    console.log(search.tvReady)\r\n                                }\r\n                            }} src={`https://image.tmdb.org/t/p/original/${result.poster_path}`}/>\r\n                        </div>\r\n                        <h2>\r\n                            {result.name}\r\n                        </h2>\r\n                    </div>  \r\n        </Link>\r\n                )\r\n                \r\n            })}\r\n          \r\n            \r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default SearchBarResultsTv\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\formElements\\SearchBarResultsPerson.js",["308","309","310","311","312","313"],"import React, {useState, useContext} from 'react'\r\nimport './SearchBarResults.css';\r\nimport {Link} from 'react-router-dom';\r\nimport { css } from \"@emotion/core\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {searchContext} from '../../util/context/search-context';\r\n\r\nconst SearchBarResultsPerson = (props) => {\r\n    const [personPresent, setPersonPresent] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const search = useContext(searchContext);\r\n    let show = false;\r\n    if(props.results.length > 0){\r\n        \r\n    }\r\n    const imagesLoaded = []\r\n    return (\r\n        <div className=\"ready\" >\r\n            {props.present && personPresent && <h2 className=\"category\">PEOPLE</h2>}\r\n            {props.results.map(result => {\r\n                return (\r\n                    <Link className=\"searchBarResults\" to={`/actor/${result.id}`} exact=\"true\">\r\n                <div className=\"searchBarLink\" >\r\n                        <div className=\"searchBarLink__image\">\r\n                            <img onLoad={() => { imagesLoaded.push(true) \r\n                                if(imagesLoaded.length === props.results.length){\r\n                                    search.pingPeople();\r\n                                    console.log(search.peopleReady)\r\n                                    show = true\r\n                                    setPersonPresent(true)\r\n                                }\r\n                            }} src={`https://image.tmdb.org/t/p/original/${result.profile_path}`}/>\r\n                        </div>\r\n                        <h2>\r\n                            {result.name}\r\n                        </h2>\r\n                    </div>  \r\n        </Link>\r\n                )\r\n                \r\n            })}\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default SearchBarResultsPerson\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\util\\context\\search-context.js",["314"],"import {useEffect, createContext} from 'react';\r\n\r\nexport const searchContext = createContext({\r\n    tvReady: false,\r\n    movieReady: false,\r\n    peopleReady: false,\r\n    pingMovie: () => {\r\n\r\n    },\r\n    pingTv: () => {\r\n\r\n    },\r\n    pingPeople: () => {\r\n\r\n    }\r\n})\r\n\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\shared\\formElements\\ImageUpload.js",["315","316"],"import React, {useRef, useState, useEffect} from 'react'\r\n\r\nconst ImageUpload = (props) => {\r\n    const [file, setFile] = useState();\r\n    const [isValid, setIsValid] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n\r\n    const filePickerRef = useRef();\r\n    useEffect(() => {\r\n        if(!file){\r\n            return\r\n        }\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result)\r\n        }\r\n        fileReader.readAsDataURL(file)\r\n    }, [file])\r\n    const filePickerHandler = () => {\r\n        filePickerRef.current.click();\r\n    }\r\n    const pickedHandler = (event) => {\r\n        let pickedImage \r\n        let fileIsValid;\r\n        const file = event.target.files\r\n        if(file && file.length === 1){\r\n            pickedImage = file[0]\r\n            setFile(pickedImage);\r\n            setIsValid(true)\r\n            fileIsValid = true\r\n        }else{\r\n            fileIsValid = false;\r\n            setIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedImage, fileIsValid)\r\n    }\r\n    return (\r\n        <div className=\"image-upload\">\r\n            <input \r\n                type=\"file\"\r\n                accept=\".png,.jpeg,.jpg\"\r\n                onChange={pickedHandler}\r\n                ref={filePickerRef}\r\n                style={{display: 'none'}}\r\n                id={props.id}\r\n            />\r\n            <div className=\"image-upload__preview\">\r\n                <img src={previewUrl} alt=\"preview\"/>\r\n            </div>\r\n            <button type=\"button\" onClick={filePickerHandler}>PICK IMAGE</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n","C:\\Users\\blade_runner\\Desktop\\React-Sass-2\\sass\\src\\movies\\pages\\Profile.js",["317","318","319","320","321","322"],"import React, {useContext, useState, useCallback, useEffect} from 'react'\r\nimport './Profile.css'\r\nimport {AuthContext} from '../../util/context/auth-context';\r\nimport {useHttpClient} from '../../util/hooks/http-hook';\r\nimport { Button } from '@material-ui/core';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst sendRequest = async (url, method = 'GET', body = null, headers={'Content-Type': 'application/json'}) => {\r\n    const response = await fetch(url, {\r\n        method,\r\n        body,\r\n        headers\r\n    })\r\n    const responseData = await response.json();\r\n    console.log(responseData)\r\n    return responseData\r\n}\r\nconst Profile = (props) => {\r\n    const [profile, setProfile] = useState(null)\r\n    const auth = useContext(AuthContext)\r\n\r\n    /*const http = useCallback(async (url, method = 'GET', body = null, headers = {\r\n        'Content-Type': 'application/json'\r\n    }) => {\r\n        const response = await fetch(url, {\r\n            method,\r\n            body,\r\n            headers\r\n        })\r\n        const responseData = await response.json()\r\n        console.log(responseData)\r\n    \r\n        return responseData;\r\n    }, [])*/\r\n    useEffect(async () => {\r\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/profile/${auth.userId}`);\r\n        setProfile(responseData)\r\n    },[])\r\n    \r\n    \r\n    return (    \r\n        <div className=\"profile\">\r\n            {profile && <React.Fragment>\r\n                <div className=\"profile__form\">\r\n                    <div className=\"profile__image\">\r\n                         <img src={profile.image} alt=\"profile\"/>\r\n                    </div> \r\n                    <div className=\"profile__info\">\r\n                        <div>\r\n                            <p><span className=\"profile__category\">NAME:</span> <span>{profile.name}</span></p>\r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <p><span className=\"profile__category\">EMAIL:</span> {profile.email}</p>\r\n                        </div>\r\n                        <div className=\"button__div\">\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"default\"\r\n                                component={Link}\r\n                                to={`/update/${profile._id}`}\r\n                                >\r\n                                Upload\r\n                            </Button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            </React.Fragment>}\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n",{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","replacedBy":"326"},{"ruleId":"327","severity":1,"message":"328","line":1,"column":8,"nodeType":"329","messageId":"330","endLine":1,"endColumn":12},{"ruleId":"327","severity":1,"message":"331","line":26,"column":9,"nodeType":"329","messageId":"330","endLine":26,"endColumn":13},{"ruleId":"327","severity":1,"message":"332","line":27,"column":9,"nodeType":"329","messageId":"330","endLine":27,"endColumn":15},{"ruleId":"333","severity":1,"message":"334","line":56,"column":15,"nodeType":"335","endLine":58,"endColumn":24},{"ruleId":"333","severity":1,"message":"336","line":65,"column":21,"nodeType":"329","endLine":65,"endColumn":32},{"ruleId":"333","severity":1,"message":"336","line":68,"column":18,"nodeType":"329","endLine":68,"endColumn":29},{"ruleId":"333","severity":1,"message":"336","line":71,"column":22,"nodeType":"329","endLine":71,"endColumn":33},{"ruleId":"327","severity":1,"message":"337","line":4,"column":8,"nodeType":"329","messageId":"330","endLine":4,"endColumn":13},{"ruleId":"327","severity":1,"message":"338","line":5,"column":10,"nodeType":"329","messageId":"330","endLine":5,"endColumn":17},{"ruleId":"327","severity":1,"message":"339","line":7,"column":8,"nodeType":"329","messageId":"330","endLine":7,"endColumn":13},{"ruleId":"327","severity":1,"message":"340","line":11,"column":12,"nodeType":"329","messageId":"330","endLine":11,"endColumn":21},{"ruleId":"327","severity":1,"message":"341","line":11,"column":23,"nodeType":"329","messageId":"330","endLine":11,"endColumn":35},{"ruleId":"333","severity":1,"message":"342","line":29,"column":8,"nodeType":"343","endLine":29,"endColumn":10,"suggestions":"344"},{"ruleId":"333","severity":1,"message":"345","line":34,"column":15,"nodeType":"346","endLine":43,"endColumn":6},{"ruleId":"333","severity":1,"message":"347","line":43,"column":8,"nodeType":"343","endLine":43,"endColumn":21,"suggestions":"348"},{"ruleId":"333","severity":1,"message":"345","line":45,"column":15,"nodeType":"346","endLine":54,"endColumn":6},{"ruleId":"333","severity":1,"message":"349","line":54,"column":8,"nodeType":"343","endLine":54,"endColumn":21,"suggestions":"350"},{"ruleId":"333","severity":1,"message":"345","line":56,"column":15,"nodeType":"346","endLine":65,"endColumn":6},{"ruleId":"333","severity":1,"message":"351","line":65,"column":8,"nodeType":"343","endLine":65,"endColumn":21,"suggestions":"352"},{"ruleId":"333","severity":1,"message":"345","line":67,"column":15,"nodeType":"346","endLine":76,"endColumn":6},{"ruleId":"333","severity":1,"message":"353","line":76,"column":8,"nodeType":"343","endLine":76,"endColumn":21,"suggestions":"354"},{"ruleId":"327","severity":1,"message":"355","line":1,"column":16,"nodeType":"329","messageId":"330","endLine":1,"endColumn":22},{"ruleId":"333","severity":1,"message":"356","line":58,"column":8,"nodeType":"343","endLine":58,"endColumn":10,"suggestions":"357"},{"ruleId":"358","severity":1,"message":"359","line":9,"column":21,"nodeType":"360","endLine":9,"endColumn":87},{"ruleId":"327","severity":1,"message":"361","line":1,"column":16,"nodeType":"329","messageId":"330","endLine":1,"endColumn":24},{"ruleId":"333","severity":1,"message":"362","line":28,"column":8,"nodeType":"343","endLine":28,"endColumn":10,"suggestions":"363"},{"ruleId":"364","severity":1,"message":"365","line":30,"column":5,"nodeType":"366","messageId":"367","endLine":36,"endColumn":6},{"ruleId":"327","severity":1,"message":"368","line":7,"column":8,"nodeType":"329","messageId":"330","endLine":7,"endColumn":14},{"ruleId":"327","severity":1,"message":"369","line":17,"column":12,"nodeType":"329","messageId":"330","endLine":17,"endColumn":19},{"ruleId":"327","severity":1,"message":"370","line":19,"column":12,"nodeType":"329","messageId":"330","endLine":19,"endColumn":16},{"ruleId":"327","severity":1,"message":"371","line":19,"column":18,"nodeType":"329","messageId":"330","endLine":19,"endColumn":25},{"ruleId":"333","severity":1,"message":"345","line":23,"column":15,"nodeType":"346","endLine":29,"endColumn":6},{"ruleId":"333","severity":1,"message":"345","line":30,"column":15,"nodeType":"346","endLine":36,"endColumn":6},{"ruleId":"333","severity":1,"message":"372","line":36,"column":8,"nodeType":"343","endLine":36,"endColumn":21,"suggestions":"373"},{"ruleId":"327","severity":1,"message":"374","line":42,"column":11,"nodeType":"329","messageId":"330","endLine":42,"endColumn":19},{"ruleId":"327","severity":1,"message":"375","line":65,"column":11,"nodeType":"329","messageId":"330","endLine":65,"endColumn":17},{"ruleId":"358","severity":1,"message":"359","line":82,"column":21,"nodeType":"360","endLine":82,"endColumn":98},{"ruleId":"358","severity":1,"message":"359","line":104,"column":25,"nodeType":"360","endLine":104,"endColumn":100},{"ruleId":"327","severity":1,"message":"376","line":15,"column":10,"nodeType":"329","messageId":"330","endLine":15,"endColumn":13},{"ruleId":"327","severity":1,"message":"377","line":16,"column":8,"nodeType":"329","messageId":"330","endLine":16,"endColumn":18},{"ruleId":"327","severity":1,"message":"378","line":18,"column":9,"nodeType":"329","messageId":"330","endLine":18,"endColumn":22},{"ruleId":"327","severity":1,"message":"379","line":25,"column":12,"nodeType":"329","messageId":"330","endLine":25,"endColumn":26},{"ruleId":"327","severity":1,"message":"380","line":25,"column":28,"nodeType":"329","messageId":"330","endLine":25,"endColumn":45},{"ruleId":"327","severity":1,"message":"381","line":27,"column":12,"nodeType":"329","messageId":"330","endLine":27,"endColumn":24},{"ruleId":"327","severity":1,"message":"382","line":28,"column":12,"nodeType":"329","messageId":"330","endLine":28,"endColumn":21},{"ruleId":"327","severity":1,"message":"383","line":28,"column":23,"nodeType":"329","messageId":"330","endLine":28,"endColumn":35},{"ruleId":"327","severity":1,"message":"384","line":29,"column":12,"nodeType":"329","messageId":"330","endLine":29,"endColumn":25},{"ruleId":"327","severity":1,"message":"385","line":29,"column":27,"nodeType":"329","messageId":"330","endLine":29,"endColumn":43},{"ruleId":"327","severity":1,"message":"386","line":38,"column":12,"nodeType":"329","messageId":"330","endLine":38,"endColumn":18},{"ruleId":"327","severity":1,"message":"387","line":38,"column":20,"nodeType":"329","messageId":"330","endLine":38,"endColumn":29},{"ruleId":"327","severity":1,"message":"388","line":39,"column":10,"nodeType":"329","messageId":"330","endLine":39,"endColumn":17},{"ruleId":"327","severity":1,"message":"389","line":40,"column":10,"nodeType":"329","messageId":"330","endLine":40,"endColumn":15},{"ruleId":"327","severity":1,"message":"390","line":40,"column":17,"nodeType":"329","messageId":"330","endLine":40,"endColumn":25},{"ruleId":"327","severity":1,"message":"391","line":41,"column":12,"nodeType":"329","messageId":"330","endLine":41,"endColumn":19},{"ruleId":"327","severity":1,"message":"392","line":42,"column":12,"nodeType":"329","messageId":"330","endLine":42,"endColumn":22},{"ruleId":"327","severity":1,"message":"393","line":43,"column":12,"nodeType":"329","messageId":"330","endLine":43,"endColumn":23},{"ruleId":"327","severity":1,"message":"332","line":44,"column":11,"nodeType":"329","messageId":"330","endLine":44,"endColumn":17},{"ruleId":"327","severity":1,"message":"394","line":45,"column":12,"nodeType":"329","messageId":"330","endLine":45,"endColumn":17},{"ruleId":"327","severity":1,"message":"395","line":45,"column":19,"nodeType":"329","messageId":"330","endLine":45,"endColumn":27},{"ruleId":"327","severity":1,"message":"396","line":69,"column":11,"nodeType":"329","messageId":"330","endLine":69,"endColumn":20},{"ruleId":"327","severity":1,"message":"397","line":81,"column":11,"nodeType":"329","messageId":"330","endLine":81,"endColumn":27},{"ruleId":"398","severity":1,"message":"399","line":132,"column":43,"nodeType":"346","messageId":"400","endLine":132,"endColumn":45},{"ruleId":"398","severity":1,"message":"399","line":143,"column":43,"nodeType":"346","messageId":"400","endLine":143,"endColumn":45},{"ruleId":"398","severity":1,"message":"399","line":153,"column":43,"nodeType":"346","messageId":"400","endLine":153,"endColumn":45},{"ruleId":"327","severity":1,"message":"401","line":1,"column":16,"nodeType":"329","messageId":"330","endLine":1,"endColumn":25},{"ruleId":"327","severity":1,"message":"337","line":3,"column":8,"nodeType":"329","messageId":"330","endLine":3,"endColumn":13},{"ruleId":"327","severity":1,"message":"402","line":5,"column":10,"nodeType":"329","messageId":"330","endLine":5,"endColumn":17},{"ruleId":"327","severity":1,"message":"403","line":6,"column":10,"nodeType":"329","messageId":"330","endLine":6,"endColumn":21},{"ruleId":"327","severity":1,"message":"404","line":7,"column":8,"nodeType":"329","messageId":"330","endLine":7,"endColumn":13},{"ruleId":"327","severity":1,"message":"405","line":11,"column":12,"nodeType":"329","messageId":"330","endLine":11,"endColumn":25},{"ruleId":"327","severity":1,"message":"406","line":11,"column":27,"nodeType":"329","messageId":"330","endLine":11,"endColumn":43},{"ruleId":"327","severity":1,"message":"340","line":12,"column":12,"nodeType":"329","messageId":"330","endLine":12,"endColumn":21},{"ruleId":"327","severity":1,"message":"332","line":13,"column":11,"nodeType":"329","messageId":"330","endLine":13,"endColumn":17},{"ruleId":"398","severity":1,"message":"399","line":45,"column":41,"nodeType":"346","messageId":"400","endLine":45,"endColumn":43},{"ruleId":"327","severity":1,"message":"361","line":1,"column":9,"nodeType":"329","messageId":"330","endLine":1,"endColumn":17},{"ruleId":"327","severity":1,"message":"401","line":1,"column":44,"nodeType":"329","messageId":"330","endLine":1,"endColumn":53},{"ruleId":"364","severity":1,"message":"365","line":6,"column":5,"nodeType":"366","messageId":"367","endLine":31,"endColumn":6},{"ruleId":"327","severity":1,"message":"337","line":2,"column":8,"nodeType":"329","messageId":"330","endLine":2,"endColumn":13},{"ruleId":"327","severity":1,"message":"402","line":3,"column":10,"nodeType":"329","messageId":"330","endLine":3,"endColumn":17},{"ruleId":"327","severity":1,"message":"407","line":10,"column":10,"nodeType":"329","messageId":"330","endLine":10,"endColumn":18},{"ruleId":"333","severity":1,"message":"345","line":20,"column":15,"nodeType":"346","endLine":29,"endColumn":6},{"ruleId":"327","severity":1,"message":"408","line":30,"column":11,"nodeType":"329","messageId":"330","endLine":30,"endColumn":23},{"ruleId":"409","severity":1,"message":"410","line":33,"column":34,"nodeType":"411","messageId":"412","endLine":33,"endColumn":36},{"ruleId":"327","severity":1,"message":"413","line":48,"column":11,"nodeType":"329","messageId":"330","endLine":48,"endColumn":21},{"ruleId":"409","severity":1,"message":"410","line":49,"column":66,"nodeType":"411","messageId":"412","endLine":49,"endColumn":68},{"ruleId":"323","replacedBy":"414"},{"ruleId":"325","replacedBy":"415"},{"ruleId":"358","severity":1,"message":"359","line":9,"column":21,"nodeType":"360","endLine":9,"endColumn":86},{"ruleId":"358","severity":1,"message":"359","line":17,"column":23,"nodeType":"360","endLine":17,"endColumn":109},{"ruleId":"416","severity":1,"message":"417","line":19,"column":21,"nodeType":"360","endLine":19,"endColumn":145},{"ruleId":"327","severity":1,"message":"418","line":13,"column":12,"nodeType":"329","messageId":"330","endLine":13,"endColumn":23},{"ruleId":"333","severity":1,"message":"419","line":25,"column":8,"nodeType":"343","endLine":25,"endColumn":10,"suggestions":"420"},{"ruleId":"327","severity":1,"message":"421","line":26,"column":36,"nodeType":"329","messageId":"330","endLine":26,"endColumn":47},{"ruleId":"327","severity":1,"message":"422","line":8,"column":8,"nodeType":"329","messageId":"330","endLine":8,"endColumn":19},{"ruleId":"333","severity":1,"message":"345","line":19,"column":15,"nodeType":"346","endLine":27,"endColumn":6},{"ruleId":"333","severity":1,"message":"423","line":27,"column":8,"nodeType":"343","endLine":27,"endColumn":21,"suggestions":"424"},{"ruleId":"358","severity":1,"message":"359","line":54,"column":21,"nodeType":"360","endLine":54,"endColumn":45},{"ruleId":"425","severity":1,"message":"426","line":59,"column":21,"nodeType":"360","endLine":59,"endColumn":24},{"ruleId":"425","severity":1,"message":"426","line":59,"column":36,"nodeType":"360","endLine":59,"endColumn":66},{"ruleId":"425","severity":1,"message":"426","line":17,"column":21,"nodeType":"360","endLine":17,"endColumn":24},{"ruleId":"425","severity":1,"message":"426","line":17,"column":36,"nodeType":"360","endLine":17,"endColumn":66},{"ruleId":"327","severity":1,"message":"427","line":1,"column":16,"nodeType":"329","messageId":"330","endLine":1,"endColumn":27},{"ruleId":"327","severity":1,"message":"428","line":21,"column":12,"nodeType":"329","messageId":"330","endLine":21,"endColumn":23},{"ruleId":"327","severity":1,"message":"429","line":21,"column":25,"nodeType":"329","messageId":"330","endLine":21,"endColumn":39},{"ruleId":"333","severity":1,"message":"345","line":26,"column":16,"nodeType":"346","endLine":37,"endColumn":6},{"ruleId":"333","severity":1,"message":"430","line":37,"column":8,"nodeType":"343","endLine":37,"endColumn":10,"suggestions":"431"},{"ruleId":"327","severity":1,"message":"432","line":39,"column":11,"nodeType":"329","messageId":"330","endLine":39,"endColumn":26},{"ruleId":"398","severity":1,"message":"399","line":50,"column":69,"nodeType":"346","messageId":"400","endLine":50,"endColumn":71},{"ruleId":"433","severity":1,"message":"434","line":52,"column":27,"nodeType":"435","messageId":"436","endLine":52,"endColumn":28},{"ruleId":"358","severity":1,"message":"359","line":56,"column":47,"nodeType":"360","endLine":56,"endColumn":111},{"ruleId":"358","severity":1,"message":"359","line":62,"column":33,"nodeType":"360","endLine":62,"endColumn":99},{"ruleId":"358","severity":1,"message":"359","line":76,"column":45,"nodeType":"360","endLine":76,"endColumn":116},{"ruleId":"327","severity":1,"message":"376","line":4,"column":10,"nodeType":"329","messageId":"330","endLine":4,"endColumn":13},{"ruleId":"327","severity":1,"message":"377","line":5,"column":8,"nodeType":"329","messageId":"330","endLine":5,"endColumn":18},{"ruleId":"327","severity":1,"message":"437","line":10,"column":12,"nodeType":"329","messageId":"330","endLine":10,"endColumn":23},{"ruleId":"327","severity":1,"message":"438","line":10,"column":25,"nodeType":"329","messageId":"330","endLine":10,"endColumn":39},{"ruleId":"327","severity":1,"message":"394","line":20,"column":11,"nodeType":"329","messageId":"330","endLine":20,"endColumn":16},{"ruleId":"358","severity":1,"message":"359","line":32,"column":37,"nodeType":"360","endLine":42,"endColumn":108},{"ruleId":"327","severity":1,"message":"370","line":36,"column":45,"nodeType":"329","messageId":"330","endLine":36,"endColumn":49},{"ruleId":"327","severity":1,"message":"376","line":4,"column":10,"nodeType":"329","messageId":"330","endLine":4,"endColumn":13},{"ruleId":"327","severity":1,"message":"377","line":5,"column":8,"nodeType":"329","messageId":"330","endLine":5,"endColumn":18},{"ruleId":"327","severity":1,"message":"388","line":11,"column":10,"nodeType":"329","messageId":"330","endLine":11,"endColumn":17},{"ruleId":"327","severity":1,"message":"439","line":11,"column":19,"nodeType":"329","messageId":"330","endLine":11,"endColumn":29},{"ruleId":"327","severity":1,"message":"389","line":12,"column":10,"nodeType":"329","messageId":"330","endLine":12,"endColumn":15},{"ruleId":"327","severity":1,"message":"390","line":12,"column":17,"nodeType":"329","messageId":"330","endLine":12,"endColumn":25},{"ruleId":"358","severity":1,"message":"359","line":31,"column":29,"nodeType":"360","endLine":38,"endColumn":99},{"ruleId":"327","severity":1,"message":"370","line":34,"column":37,"nodeType":"329","messageId":"330","endLine":34,"endColumn":41},{"ruleId":"327","severity":1,"message":"376","line":4,"column":10,"nodeType":"329","messageId":"330","endLine":4,"endColumn":13},{"ruleId":"327","severity":1,"message":"377","line":5,"column":8,"nodeType":"329","messageId":"330","endLine":5,"endColumn":18},{"ruleId":"327","severity":1,"message":"340","line":10,"column":12,"nodeType":"329","messageId":"330","endLine":10,"endColumn":21},{"ruleId":"327","severity":1,"message":"341","line":10,"column":23,"nodeType":"329","messageId":"330","endLine":10,"endColumn":35},{"ruleId":"358","severity":1,"message":"359","line":25,"column":29,"nodeType":"360","endLine":32,"endColumn":100},{"ruleId":"327","severity":1,"message":"370","line":29,"column":37,"nodeType":"329","messageId":"330","endLine":29,"endColumn":41},{"ruleId":"327","severity":1,"message":"401","line":1,"column":9,"nodeType":"329","messageId":"330","endLine":1,"endColumn":18},{"ruleId":"327","severity":1,"message":"440","line":5,"column":12,"nodeType":"329","messageId":"330","endLine":5,"endColumn":19},{"ruleId":"441","severity":1,"message":"442","line":33,"column":13,"nodeType":"329","messageId":"443","endLine":33,"endColumn":23},{"ruleId":"327","severity":1,"message":"427","line":1,"column":38,"nodeType":"329","messageId":"330","endLine":1,"endColumn":49},{"ruleId":"327","severity":1,"message":"444","line":4,"column":9,"nodeType":"329","messageId":"330","endLine":4,"endColumn":22},{"ruleId":"327","severity":1,"message":"445","line":6,"column":8,"nodeType":"329","messageId":"330","endLine":6,"endColumn":28},{"ruleId":"327","severity":1,"message":"446","line":7,"column":8,"nodeType":"329","messageId":"330","endLine":7,"endColumn":23},{"ruleId":"333","severity":1,"message":"345","line":37,"column":15,"nodeType":"346","endLine":40,"endColumn":6},{"ruleId":"333","severity":1,"message":"447","line":40,"column":7,"nodeType":"343","endLine":40,"endColumn":9,"suggestions":"448"},"no-native-reassign",["449"],"no-negated-in-lhs",["450"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'auth' is assigned a value but never used.","'search' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'Input' is defined but never used.","'REQUIRE' is defined but never used.","'Modal' is defined but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'nowPlayingLoading', 'pageLoading', 'popularLoading', 'topRatedLoading', and 'upComingLoading'. Either include them or remove the dependency array.","ArrayExpression",["451"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'nowPlayingCount'. Either include it or remove the dependency array.",["452"],"React Hook useEffect has a missing dependency: 'popularCount'. Either include it or remove the dependency array.",["453"],"React Hook useEffect has a missing dependency: 'topRatedCount'. Either include it or remove the dependency array.",["454"],"React Hook useEffect has a missing dependency: 'upComingCount'. Either include it or remove the dependency array.",["455"],"'useRef' is defined but never used.","React Hook useCallback has missing dependencies: 'count', 'props', and 'sendRequest'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["456"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","React Hook useCallback has a missing dependency: 'props.validators'. Either include it or remove the dependency array.",["457"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Inputs' is defined but never used.","'videoId' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'movie_id'. Either include it or remove the dependency array.",["458"],"'setVideo' is assigned a value but never used.","'showId' is assigned a value but never used.","'css' is defined but never used.","'ClipLoader' is defined but never used.","'CSSTransition' is defined but never used.","'loadingResults' is assigned a value but never used.","'setLoadingResults' is assigned a value but never used.","'moviePresent' is assigned a value but never used.","'tvPresent' is assigned a value but never used.","'setTvPresent' is assigned a value but never used.","'personPresent' is assigned a value but never used.","'setPersonPresent' is assigned a value but never used.","'movies' is assigned a value but never used.","'setMovies' is assigned a value but never used.","'loading' is assigned a value but never used.","'color' is assigned a value but never used.","'setColor' is assigned a value but never used.","'tvReady' is assigned a value but never used.","'movieReady' is assigned a value but never used.","'personReady' is assigned a value but never used.","'ready' is assigned a value but never used.","'setReady' is assigned a value but never used.","'printUser' is assigned a value but never used.","'setMovieCallback' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'useEffect' is defined but never used.","'useForm' is defined but never used.","'sendRequest' is defined but never used.","'axios' is defined but never used.","'searchResults' is assigned a value but never used.","'setSearchResults' is assigned a value but never used.","'addEvent' is defined but never used.","'removeActors' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'showOrHide' is assigned a value but never used.",["449"],["450"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'sendRequest' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'auth.token'. Either include it or remove the dependency array.",["459"],"'setFormData' is assigned a value but never used.","'ImageUpload' is defined but never used.","React Hook useEffect has a missing dependency: 'props.leadCommentId'. Either include it or remove the dependency array.",["460"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useCallback' is defined but never used.","'actorPhotos' is assigned a value but never used.","'setActorPhotos' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'actorId'. Either include it or remove the dependency array.",["461"],"'changePhotoleft' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'imagesReady' is assigned a value but never used.","'setImagesReady' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'isValid' is assigned a value but never used.","no-const-assign","'setIsValid' is constant.","const","'useHttpClient' is defined but never used.","'AddCircleOutlineIcon' is defined but never used.","'CloudUploadIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'auth.userId'. Either include it or remove the dependency array.",["462"],"no-global-assign","no-unsafe-negation",{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},"Update the dependencies array to be: [nowPlayingLoading, pageLoading, popularLoading, topRatedLoading, upComingLoading]",{"range":"487","text":"488"},"Update the dependencies array to be: [nowPlayingCount, sendRequest]",{"range":"489","text":"490"},"Update the dependencies array to be: [popularCount, sendRequest]",{"range":"491","text":"492"},"Update the dependencies array to be: [sendRequest, topRatedCount]",{"range":"493","text":"494"},"Update the dependencies array to be: [sendRequest, upComingCount]",{"range":"495","text":"496"},"Update the dependencies array to be: [count, props, sendRequest]",{"range":"497","text":"498"},"Update the dependencies array to be: [props.validators]",{"range":"499","text":"500"},"Update the dependencies array to be: [movie_id, sendRequest]",{"range":"501","text":"502"},"Update the dependencies array to be: [auth.token]",{"range":"503","text":"504"},"Update the dependencies array to be: [props.leadCommentId, sendRequest]",{"range":"505","text":"506"},"Update the dependencies array to be: [actorId]",{"range":"507","text":"508"},"Update the dependencies array to be: [auth.userId]",{"range":"509","text":"510"},[1464,1466],"[nowPlayingLoading, pageLoading, popularLoading, topRatedLoading, upComingLoading]",[1948,1961],"[nowPlayingCount, sendRequest]",[2405,2418],"[popularCount, sendRequest]",[2868,2881],"[sendRequest, topRatedCount]",[3334,3347],"[sendRequest, upComingCount]",[2083,2085],"[count, props, sendRequest]",[994,996],"[props.validators]",[1570,1583],"[movie_id, sendRequest]",[1035,1037],"[auth.token]",[1076,1089],"[props.leadCommentId, sendRequest]",[1316,1318],"[actorId]",[1463,1465],"[auth.userId]"]